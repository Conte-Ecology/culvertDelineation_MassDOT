{
  "name": "Deerfield Culvert Delineation - MassDOT",
  "tagline": "Point delineation based on the NHDHRDV2 hydrography layers",
  "body": "## Point Delineation Documentaiton\r\nThis project serves as an example workflow to delineating point locations on a \r\nstream network using the \r\n[NHDHRDV2 hydrography layers](http://conte-ecology.github.io/shedsGisData/). \r\nCulvert and flow gage locations in the Deerfield watershed in MA & VT are \r\ndelineated as part of the MassDOT Culvert Project (Figure 1). Additionally, \r\nwatershed attributes are caluclated for each of the given locations. Any tools \r\nreferenced are assumed for ArcMap 10.2. The documentaiton is broken into the \r\nfollowing sections: <br>\r\n**1. Source Layers** <br>\r\n**2. Layer Pre-processing** <br>\r\n**3. Location Editing** <br>\r\n**4. Watershed Delineation** <br>\r\n**5. Additional Analysis** <br>\r\n**6. Catchment Attributes** <br>\r\n\r\n\r\n![Figure 1](https://cloud.githubusercontent.com/assets/6216239/14360676/82a1be6e-fcc5-11e5-8a41-b16be0630d9b.png)\r\n\r\nFigure 1: Deerfield watershed with culvert and gage locations\r\n<br><br>\r\n\r\n## Source Layers\r\nThe intermediate hydrography processing layers from the NHDHRDV2 dataset are \r\nrequired for the delineation process. Not all of these layers are made public, \r\nbut are available upon request. In addition to the source layers listed in the \r\ntable below, a spatial points layer representing the locations to be delineated \r\nis required. If the points are not already mapped to the stream grid, this is \r\ndone in the **Location Editing** section. \r\n\r\n\r\n| Description                        | Filename              | Directory                                          |\r\n|:-----------------------------------|:----------------------|:---------------------------------------------------|\r\n| Catchment Layer                    | Catchment01           | HRD\\V2\\gisFiles\\NHDH01\\arcHydro\\vectors.gdb\\Layers |\r\n| Flow direction grid                | Fdr01                 | HRD\\V2\\gisFiles\\NHDH01\\arcHydro\\Layers             |\r\n| Flow accumulation grid             | Fac01                 | HRD\\V2\\gisFiles\\NHDH01\\arcHydro\\Layers             |\r\n| Stream grid (final)                | strFinal01            | HRD\\V2\\gisFiles\\NHDH01\\arcHydro\\Layers             |\r\n| Drainage line (final)              | DrainageLineFinal01   | HRD\\V2\\gisFiles\\NHDH01\\arcHydro\\vectors.gdb\\Layers |\r\n| High res flowlines                 | detailedFlowlines01   | HRD\\V2\\products\\hydrography.gdb                    |\r\n| Points layer                       | crossings_delineation | User-specified                                     |\r\n| Digital Elevation Model (optional) | dem                   | HRD\\V2\\gisFiles\\NHDH01\\arcHydroInput.gdb           |\r\nTable 1: Required source layers from NHDHRDV2 dataset\r\n\r\n## Layer Pre-processing\r\n\r\n**1. Define Processing Zone** <br>\r\nThe processing zone shapefile is created, encompasing the full extent of the \r\npotential contributing drainage area to the points being processed. This can be \r\nbased on  a HUC boundary layer, selected catchments, or some other processing \r\narea designation layer. Whatever the method, it is important to maintain network \r\nconnectivity within the desired watershed. Splitting a watershed by excluding \r\ncontributing drainage area will result in incorrect delineation.\r\n\r\n**2. Buffer Processing Zone** <br>\r\nThe processing zone shapefile is buffered (*Analysis Tools > Proximity > Buffer*)\r\nto ensure all features in the necessary processing range are captured. 1 - 2 km \r\nis a reasonable buffer length. This step is not necessary if the original shapefile \r\ncertain to contain all required catchments and flowlines.\r\n\r\n**3. Generate Vector Layers** <br>\r\nFeatures from each of the Drainage Line and Catchment layers that intersect \r\nthe buffer layer are selected and exported as new layers.\r\n\r\n**4. Generate Raster Layers** <br>\r\nThe stream grid, dem, flow direction grid and flow accumulation grid \r\nare clipped to the buffer layer using the Extract by Mask tool \r\n(*Spatial Analyst Tools > Extraction > Extract by Mask*).\r\n\r\n**5. Create Snap Stream Grid** <br>\r\nA stream grid used for snapping points (`strSnap50`) is created using the \r\nReclassify tool (*Spatial Analyst Tools > Reclass > Reclassify*). In this \r\ncase, cells in the flow accumulation layer with 50 or more contributing cells \r\nare reclassfied as a value of 1 to define the snapping grid. All other cells \r\nare reclassified as \"NoData\".\r\n\r\n\r\n## Location Editing\r\n\r\nThe delineation process requires location points to be snapped to the \r\n`strSnap50` layer (Figure 2). Before this snapping is completed, the \r\npoints must be  manually inspected to ensure that they will snap to sensible \r\nlocations on the stream grid. For visual inspection, the stream grid \r\n(`strFinal`) is displayed over the `strSnap50` layer. The high resolution \r\nflowline vector layer (`strHR`) is also displayed for reference in the manual \r\ninspection process. \r\n\r\n![Figure 2](https://cloud.githubusercontent.com/assets/6216239/14295484/d84dbcf6-fb43-11e5-9909-d578fddea8db.png)\r\n\r\nFigure 2: Example of snapping a point to the snap stream grid\r\n<br><br>\r\n\r\nAs a general rule, relative positioning of the point on the `strHR` vector layer \r\nshould be reflected in its position on the stream grid after snapping. Figure 3 \r\nshows an example of a correction to ensure the point is located on the correct \r\nbranch of the stream grid with respect to it's location on the vector layer. \r\n\r\n![Figure 3](https://cloud.githubusercontent.com/assets/6216239/14295485/d850c892-fb43-11e5-942f-757504d4fe0b.png)\r\n\r\nFigure 3: Adjustment of a point to the correct position on the stream grid\r\n<br><br>\r\n\r\n\r\nDifferences between the stream and snap grids also require adjustment of points \r\nto ensure they fall on the correct channel. Figure 4 shows how a point may fall \r\nonto a seemingly accurate position on the snap stream grid (`strSnap50`), but \r\nactually needs to be corrected to fall into the main channel of the stream \r\nrepresented by `strFinal`. \r\n\r\n![Figure 4](https://cloud.githubusercontent.com/assets/6216239/14295486/d852824a-fb43-11e5-8c52-5ea70749c804.png)\r\n\r\nFigure 4: Location adjustment to ensure point falls on the main stream channel\r\n<br><br>\r\n\r\nIn some cases locations are on such small, undocumented streams that snapping \r\nshould be turned off for that particular point (Figure 5). These points are \r\nnoted and will be identified in the \"SnapOn\" column of the **Batch Point Setup** \r\nstep of the next section.\r\n\r\n![Figure 5](https://cloud.githubusercontent.com/assets/6216239/14295483/d84c727e-fb43-11e5-9d05-b4aedbf056b1.png)\r\n\r\nFigure 5: Example of a point, located on an undocumented stream, that does not  \r\nget snapped to the stream grid\r\n<br><br>\r\n\r\n\r\n## Watershed Delineation\r\nThe watershed delineation process takes advantage of the ArcHydro tools. Layers \r\nare conformed to the specifications of these tools. It is necessary to follow \r\nthe steps in order to generate the watersheds polygon layer.\r\n\r\n**1. Adjoint Catchment Processing**\r\n\r\n***Input*** <br>\r\nDrainage Line: DrainageLineFinal <br> \r\nCatchment: Catchment <br>\r\n\r\n***Output*** <br>\r\nAdjoint Catchment: AdjointCatchment <br>\r\n<br><br>\r\n\r\n**2. Batch Point Setup**\r\n\r\nFive columns are added to the point location layer using the \"Add Field\" tool \r\n(*Data Management Tools > Fields > Add Field*). These columns are necessary \r\nfor batch delineation and are described in the table below.\r\n\r\n\r\n| Name      | Type          | Value     | Description                                                                                                                    |\r\n|:----------|:--------------|:----------|:-------------------------------------------------------------------------------------------------------------------------------|\r\n| SnapOn    | Short integer | 1         | Identifies whether or not the site gets snapped to the steram grid. 0 = don't snap, 1 = snap                                   |\r\n| BatchDone | Short integer | 0         | Identified whether or not the point has been processed by the Batch Waterhsed Delineation tool. 0 = unprocessed, 1 = processed |\r\n| SrcType   | Short integer | 0         | Defines the point type. 0 = outlet, 1 = inlet                                                                                  |\r\n| Name      | String        | XYCroCode | The unique ID assigned to the watershed                                                                                        |\r\n| Descript  | String        | StrmName  | The description of the site                                                                                                    |\r\nTable 2: Fields added to the point location layer to establish the \"Batch Point\" \r\nlayer for delineation\r\n<br><br>\r\n\r\n**3. Batch Watershed Delineation**\r\n\r\n***Input*** <br>\r\nBatch Point: crossings_delineation <br>\r\nFlow Direction Grid: fdr <br>\r\nStream Grid: strFinal <br>\r\nSnap Stream Grid: strSnap50 <br>\r\nCatchment: Catchment <br>\r\nAdjoint Catchment: AdjointCatchment\r\n\r\n***Output*** <br>\r\nWatershed: Watershed <br>\r\nWatershed Point: WatershedPoint\r\n<br><br>\r\n\r\n## Additional Analysis\r\nThis section describes the additional steps required to caluclate attributes \r\nspecific to the MassDOT Culvert Project. These steps are not neccessary for \r\ncreating watershed polygons.\r\n\r\n**1. Longest Flow Path**\r\n\r\n***Input*** <br>\r\nDrainage Area: Watersheds <br>\r\nFlow Direction Grid: fdr\r\n\r\n***Output*** <br>\r\nLongest Flow Path: LongestFlowPath\r\n<br><br>\r\n\r\n**2. Flow Path Parameters from 2D Line**\r\n\r\n***Input*** <br>\r\nLongest Flow Path: LongestFlowPath <br>\r\nRaw DEM: dem <br>\r\n\r\n***Output*** <br>\r\nSlope 1085 Point: Slp1085Point\r\n<br><br>\r\n\r\n\r\n## Catchment Attributes\r\nThe steps in this section calculate the attributes for the watershed polygons. \r\nA small set of value rasters is used but can be added to if new attributes are \r\ndesired.\r\n\r\n**1. Spatial Layer Processing**\r\n\r\nOnce the spatial layers have been generated a post-processing script is run to \r\nadd unique ID fields, calculate area/length, and export tables for use in later \r\nsteps. The inputs are defined in the `spatialPostProcessing.py` script and it \r\nis executed in Arc Python.\r\n\r\n\r\n| Variable            | Description                                                                                                                    | Example                       |\r\n|:--------------------|:-------------------------------------------------------------------------------------------------------------------------------|:------------------------------|\r\n| arcHydroGeodatabase | The path to the ArcHydro output geodatabase containing the hydrography layers (Watershed, WatershedPoint, and LongestFlowPath) | \"C:/culverts/NHDHRDV2.gdb\"    |\r\n| uniqueID            | The name of the unique ID field used to populate the \"Name\" column in the Batch Point Setup step                               | \"XYCroCode\"                   |\r\n| zonalStatsDirectory | The path to the parent directory where the attributes tables will be written                                                   | \"C:/culverts/zonalStatistics\" |\r\nTable 3: User-inputs to the spatialPostProcessing.py script\r\n<br><br>\r\n\r\n**2. Calculate Zonal Statistics**\r\nAfter the spatial layers are updated, the inputs to the \r\n`zonalStatisticsProcessing.py` script are defined and the script is executed in \r\nArc Python.\r\n\r\n\r\n| Variable            | Description                                                                                                                                                        | Example                                                               |\r\n|:--------------------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------|:----------------------------------------------------------------------|\r\n| zonalStatsDirectory | The  path to the parent directory where the attributes tables will be written                                                                                      | \"C:/culverts/zonalStatistics\"                                         |\r\n| catchmentsFilePath  | The name of the unique ID field used to populate the \"Name\" column in the Batch Point Setup step                                                                   | \"C:/culverts/NHDHRDV2.gdb/Watershed\"                                  |\r\n| zoneField           | The field identifying the watershed polygons over which stats are calculated, typically the same as the uniqueID variable in the \"spatialPostProcessing.py\" script | \"XYCroCode\"                                                           |\r\n| rasterDirectory     | The directory path to where the value rasters are located                                                                                                          | \"C:/culverts/spatial/rasters\"                                         |\r\n| rasterList          | The list of rasters to process                                                                                                                                     | [\"slope_pcnt\", \"ann_prcp_mm\", \"surfcoarse\", \"elevation\", \"lccti.tif\"] |\r\n| statList            | The list of stats to process for each raster, positions must match the \"rasterList\"                                                                                | [\"STD\", \"MEAN\", \"MEAN\", \"MEAN\", \"MIN_MAX_MEAN\"]                       |\r\nTable 4: User-inputs to the zonalStatisticsProcessing.py script\r\n<br><br>\r\n\r\n**3. Finalize Attributes**\r\nThe R script, `finalizeZonalStatistics.R`, edits the raw output from the \"Zonal \r\nStatistics\" tool for final output. The inputs are defined and the script is \r\nexecuted in R.\r\n\r\n| Variable            | Description                                                                                                         | Example                                                                                                      |\r\n|:--------------------|:--------------------------------------------------------------------------------------------------------------------|:-------------------------------------------------------------------------------------------------------------|\r\n| zonalStatsDirectory | The path to the parent directory where the attributes tables will be written                                        | \"C:/culverts/zonalStatistics\"                                                                                |\r\n| outputName          | The name used to identify the output .RData file                                                                    | \"deerfield\"                                                                                                  |\r\n| zoneField           | The field identifying the watershed polygons over which stats are calculated                                        | \"XYCroCode\"                                                                                                  |\r\n| rasterList          | The list of rasters to process                                                                                      | c(\"slope_pcnt\", \"ann_prcp_mm\", \"surfcoarse\", \"elevation\", \"lccti.tif\")                                       |\r\n| statList            | The list of stat names used for proecssing raster. Names are used for column indexing and should match ArcGIS names | c(\"STD\", \"MEAN\", \"MEAN\", \"MEAN\", \"MIN_MAX_MEAN\")                                                             |\r\n| conversionFactor    | The conversion factors from the raw rater value to the final output value                                           | c(1, 0.0393701, 100, 3.28084, 1, 1, 1)                                                                       |\r\n| newName             | The ouput name for the variables from the raw rasters                                                               | c(\"slope_pcnt_std\", \"ann_prcp_in\", \"surfcoarse\", \"elevation_ft\", \"lccti_mean\",  \"lccti_min\", \"channelSlope\") |\r\nTable 5: User-inputs to the finalizeZonalStatistics.R script",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}